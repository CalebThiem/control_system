# Description #

Communicates with an Arduino over serial, sending and receiving strings up to 300 characters in length. 

Advantages: easy to understand and modify

Disadvantages: inefficient

# General Behaviour #

# Baud Rate #

Arduino opens serial port at 460800 baud.

# Serial Transmission #

Message is up to 300 bytes long. Each byte represents an ASCII text character.

The first byte is a '<'. This signifies the start of the message. 

The next 8 bytes comprise a zero-padded, capitalised hexadecimal CRC32 checksum of the rest of the message, excluding the last character.

The last byte is a '>'. This signifies the end of the message.

Upon receiving a properly formatted message, the Arduino will respond with one of the following ASCII text transmissions:

    "Verified" is sent if the checksum matches the computed checksum

    "ChecksumFailed" is sent if the checksum does not match the computed checksum


If the first character after the checksum was a '?', the Arduino will then send
a message of its own, with identical formatting.

This message is composed of 24 "1" or "0" characters, with each consecutive character representing the state of a digital input pin, representing pins 30 through 53, inclusive. Following this string of 1s and 0s is a dash, followed by ten dash-seperated four digit numbers, each holding the value (0 to 1023) of an analog input pin, beginning with A6 and ending with A15. 

Input example:

<8758F833101010111000010101010011110000101010101010>

<checksum-----------output pin states-------------->

Output example:

<BC90042C111111111111111111111111-0473-0526-0644-0622-0636-0654-0705-0714-0715-0725>

<checksum---digital pin states--- -A6- -A7- -A8- -A9- -A10 -A11 -A12 -A13 -A14 -A15>




